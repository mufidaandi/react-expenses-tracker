{"version":3,"sources":["components/Card/Card.js","components/ExpensesFilter/ExpensesFilter.js","components/ExpenseDate/ExpenseDate.js","components/ExpenseItem/ExpenseItem.js","components/ExpensesList/ExpensesList.js","components/ChartBart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart/ExpensesChart.js","components/Expenses/Expenses.js","components/ExpenseForm/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","showForm","setShowForm","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","initialExpenses","App","setFinalExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"qbAQeA,MANf,SAAcC,GACZ,IAAMC,EAAU,QAAUD,EAAME,UAEhC,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,UACxC,ECkBcC,G,MApBQ,SAACJ,GAKtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,MAAOL,EAAMM,SAAUC,SARP,SAACC,GAC7BR,EAAMS,eAAeD,EAAME,OAAOL,MACnC,EAMK,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,yBAKT,G,MCPcM,MAbf,SAAqBX,GACnB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMf,EAAMa,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOhB,EAAMa,KAAKI,cACxB,OACE,sBAAKf,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCU,IACtC,qBAAKV,UAAU,qBAAf,SAAqCc,IACrC,qBAAKd,UAAU,oBAAf,SAAoCa,MAGzC,E,MCGcG,MAZf,SAAqBlB,GACnB,OACE,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OACzB,sBAAKX,UAAU,4BAAf,UACE,6BAAKF,EAAMmB,QACX,sBAAKjB,UAAU,sBAAf,cAAuCF,EAAMoB,eAIpD,ECQcC,G,MAnBM,SAACrB,GACpB,OAA2B,IAAvBA,EAAMsB,MAAMC,OACP,oBAAIrB,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACGF,EAAMsB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBP,KAAMY,EAAQZ,MAHTY,EAAQC,GAFA,KAUtB,G,OCGcC,G,MApBE,SAAC3B,GAChB,IAAI4B,EAAgB,KAMpB,OAJI5B,EAAM6B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO/B,EAAMK,MAAQL,EAAM6B,SAAY,KAAO,KAInE,sBAAK3B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV8B,MAAO,CAAEC,OAAQL,OAGrB,qBAAK1B,UAAU,mBAAf,SAAmCF,EAAMkC,UAG9C,GCAcC,G,MAjBD,SAACnC,GACb,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUjC,KAAd,IAChDkC,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IACjC,OACE,qBAAKlC,UAAU,QAAf,SACGF,EAAMqC,WAAWb,KAAI,SAACc,GAAD,OACpB,cAAC,EAAD,CAEEjC,MAAOiC,EAAUjC,MACjBwB,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,MAFG,KAU3B,GCScO,EAxBO,SAACzC,GACrB,IAD+B,EACzB0C,EAAkB,CACtB,CAAER,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,IAbM,cAgBTL,EAAM2C,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BlB,EAA2B,QAEpCiB,EADqBjB,EAAQZ,KAAK+B,YACJvC,OAASoB,EAAQL,MAChD,CAnB8B,+BAqB/B,OAAO,cAAC,EAAD,CAAOiB,WAAYK,GAC3B,ECOcG,G,MAzBE,SAAC7C,GAChB,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAmBjD,EAAMsB,MAAM4B,QAAO,SAACzB,GAC3C,OAAOA,EAAQZ,KAAKI,cAAckC,aAAeJ,CAClD,IAED,OACE,8BACE,eAAC,EAAD,CAAM7C,UAAU,WAAhB,UACE,cAAC,EAAD,CACEI,SAAUyC,EACVtC,eAboB,SAAC2C,GAC3BJ,EAAgBI,EACjB,IAaK,cAAC,EAAD,CAAeT,SAAUM,IACzB,cAAC,EAAD,CAAc3B,MAAO2B,QAI5B,G,OC+DcI,G,MA1FK,SAACrD,GACnB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAA0CT,mBAAS,IAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAAgCb,oBAAS,GAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KAmCA,OAAKD,EAaH,uBAAME,SAlCc,SAACtD,GACrBA,EAAMuD,iBAEN,IAAMC,EAAc,CAClB7C,MAAOmC,EACPlC,QAASoC,EACT3C,KAAM,IAAIoD,KAAKP,IAGjB1D,EAAMkE,kBAAkBF,GACxBT,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,IACfE,GAAY,EACb,EAoBC,UACE,sBAAK3D,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEiE,KAAK,OACL9D,MAAOiD,EACP/C,SArDiB,SAACC,GAC1B+C,EAAgB/C,EAAME,OAAOL,MAC9B,OAsDK,sBAAKH,UAAU,uBAAf,UACE,2CACA,uBACEiE,KAAK,SACLC,IAAI,OACJC,KAAK,OACLhE,MAAOmD,EACPjD,SA3DkB,SAACC,GAC3BiD,EAAiBjD,EAAME,OAAOL,MAC/B,OA4DK,sBAAKH,UAAU,uBAAf,UACE,yCACA,uBACEiE,KAAK,OACLC,IAAI,aACJ5B,IAAI,aACJnC,MAAOqD,EACPnD,SAjEgB,SAACC,GACzBmD,EAAenD,EAAME,OAAOL,MAC7B,UAmEG,qBAAKH,UAAU,uBAAf,SACE,wBAAQiE,KAAK,SAAb,8BA3CF,sBAAML,SAPc,SAACtD,GACvBA,EAAMuD,iBACNF,GAAY,EACb,EAIG,SACE,qBAAK3D,UAAU,uBAAf,SACE,wBAAQiE,KAAK,SAASjE,UAAU,SAAhC,gCA6CT,GCvEcoE,G,MAhBI,SAACtE,GASlB,OACE,qBAAKE,UAAU,cAAf,SACE,cAAC,EAAD,CAAagE,kBAVc,SAACK,GAC9B,IAAMP,EAAW,2BACZO,GADY,IAEf7C,GAAII,KAAK0C,SAASrB,aAEpBnD,EAAMyE,aAAaT,EACpB,KAOF,GCfKU,EAAkB,CACtB,CACEhD,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRP,KAAM,IAAIoD,KAAK,KAAM,EAAG,KAE1B,CAAEvC,GAAI,KAAMP,MAAO,SAAUC,OAAQ,OAAQP,KAAM,IAAIoD,KAAK,KAAM,EAAG,KACrE,CACEvC,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRP,KAAM,IAAIoD,KAAK,KAAM,EAAG,KAE1B,CACEvC,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRP,KAAM,IAAIoD,KAAK,KAAM,EAAG,MAqBbU,MAjBf,WACE,MAAqC7B,mBAAS4B,GAA9C,mBAAO/B,EAAP,KAAiBiC,EAAjB,KAQA,OACE,gCACE,cAAC,EAAD,CAAYH,aARU,SAAChD,GACzBmD,GAAiB,SAACC,GAChB,MAAM,CAAEpD,GAAR,mBAAoBoD,GACrB,GACF,IAKG,cAAC,EAAD,CAAUvD,MAAOqB,MAGtB,ECpCYmC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.11713877.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  \r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import Card from \"../Card/Card\";\r\nimport ExpenseDate from \"../ExpenseDate/ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"../ExpenseItem/ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"../ChartBart/ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\n\r\nimport Card from '../Card/Card';\r\nimport ExpensesFilter from '../ExpensesFilter/ExpensesFilter';\r\nimport ExpensesList from '../ExpensesList/ExpensesList';\r\nimport ExpensesChart from \"../ExpensesChart/ExpensesChart\";\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setShowForm(false);\r\n  };\r\n\r\n  const showFormHandler = (event) => {\r\n    event.preventDefault();\r\n    setShowForm(true);\r\n  };\r\n\r\n  if (!showForm) {\r\n    return (\r\n      <form onSubmit={showFormHandler}>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\" className=\"center\">\r\n            Add New Expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\n\r\nimport ExpenseForm from \"../ExpenseForm/ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst initialExpenses = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [expenses, setFinalExpenses] = useState(initialExpenses);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setFinalExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}